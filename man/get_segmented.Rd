% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/thresholding.R
\name{get_segmented}
\alias{get_segmented}
\title{Multiple Breakpoints via Piecewise Linear Regression}
\usage{
get_segmented(x, y, n.breakpoints = 2)
}
\arguments{
\item{x}{Numeric vector of x-values.}

\item{y}{Numeric vector of y-values of the same length as \code{x}.}

\item{n.breakpoints}{Integer number of breakpoints to identify (>=1).}
}
\value{
A list with:
\itemize{
\item \code{model_break_xs}: The \strong{model-estimated} x-coordinates of each breakpoint.
\item \code{model_break_ys}: The predicted y-values at those breakpoints (via the segmented model).
\item \code{closest_xs}: The x-values from the \emph{original data} nearest each breakpoint.
\item \code{closest_ys}: The corresponding y-values from the original data.
\item \code{segmented_model}: The resulting \code{segmented} model object.
}
}
\description{
\strong{Fit multiple linear segments} using the \pkg{segmented} package. The user
specifies the number of breakpoints. The model estimates their \emph{x}-coordinates,
and we compute corresponding \emph{y} predictions at those points.
}
\details{
Additionally, we find the \strong{closest actual data point} (in the original
\verb{x,y} vectors) to each estimated breakpoint and return those, too.
\enumerate{
\item Fit \code{lm(y ~ x)}.
\item Pass this to \code{segmented::segmented()}, requesting \code{n.breakpoints}.
\item Extract the x-locations from \code{segfit$psi}, then predict y-values at those points.
\item For each estimated breakpoint, find the \strong{nearest actual x} in the data
(via \code{which.min(abs(x - bps_x[i]))}), and return the corresponding
\verb{(x, y)} as \code{closest_xs} and \code{closest_ys}.
}

Note that these breakpoints may not coincide with \emph{actual} data points, but
rather are estimated for an optimal piecewise fit. The additional \code{closest_xs}
and \code{closest_ys} let you see which real data points are nearest those break estimates.
}
\examples{
x_data <- seq(500)
# Exponential data
y_data <- 1 * exp(0.02 * (x_data - 1))

# Sigmoidal
y_data2 <- 1 / (1 + exp(-0.02 * (x_data - 250)))

res_seg <- get_segmented(x_data, y_data, n.breakpoints = 1)
res_seg$model_break_xs # Model-estimated x
res_seg$model_break_ys # Predicted y from model at that x
res_seg$closest_xs # Actual data x nearest the model breakpoint
res_seg$closest_ys # Actual data y for that nearest x

res_seg2 <- get_segmented(x_data, y_data2, n.breakpoints = 2)
res_seg2$model_break_xs
res_seg2$closest_xs
}
\author{
Jared Andrews
}
